Dataset({
    features: ['X', 'Y'],
    num_rows: 1600000
})
Filter:   0%|                                                                                                        | 0/1600000 [00:00<?, ? examples/s]
Traceback (most recent call last):
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 250, in <module>
    train_model_Copy('./data/binary_reverse.tsv')
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 243, in train_model_Copy
    trainer.fit(model, data_module)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 538, in fit
    call._call_and_handle_interrupt(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 47, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 574, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 943, in _run
    call._call_setup_hook(self)  # allow user to set up LightningModule in accelerator environment
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 102, in _call_setup_hook
    _call_lightning_datamodule_hook(trainer, "setup", stage=fn)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 189, in _call_lightning_datamodule_hook
    return fn(*args, **kwargs)
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 167, in setup
    self.train_dataset = BinaryCopyDataset(self.data['train'], token_mapping, length=self.length)
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 38, in __init__
    self.data = data.filter(self.filter_length)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 560, in wrapper
    out: Union["Dataset", "DatasetDict"] = func(self, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/fingerprint.py", line 442, in wrapper
    out = func(dataset, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3650, in filter
    indices = self.map(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 560, in wrapper
    out: Union["Dataset", "DatasetDict"] = func(self, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3035, in map
    for rank, done, content in Dataset._map_single(**dataset_kwargs):
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3438, in _map_single
    batch = apply_function_on_filtered_inputs(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3300, in apply_function_on_filtered_inputs
    processed_inputs = function(*fn_args, *additional_args, **fn_kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 6281, in get_indices_from_mask_function
    mask.append(function(example, *additional_args, **fn_kwargs))
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 45, in filter_length
    return len(input["input_ids"]) == self.length
KeyError: 'input_ids'
Traceback (most recent call last):
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 250, in <module>
    train_model_Copy('./data/binary_reverse.tsv')
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 243, in train_model_Copy
    trainer.fit(model, data_module)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 538, in fit
    call._call_and_handle_interrupt(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 47, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 574, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 943, in _run
    call._call_setup_hook(self)  # allow user to set up LightningModule in accelerator environment
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 102, in _call_setup_hook
    _call_lightning_datamodule_hook(trainer, "setup", stage=fn)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 189, in _call_lightning_datamodule_hook
    return fn(*args, **kwargs)
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 167, in setup
    self.train_dataset = BinaryCopyDataset(self.data['train'], token_mapping, length=self.length)
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 38, in __init__
    self.data = data.filter(self.filter_length)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 560, in wrapper
    out: Union["Dataset", "DatasetDict"] = func(self, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/fingerprint.py", line 442, in wrapper
    out = func(dataset, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3650, in filter
    indices = self.map(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 560, in wrapper
    out: Union["Dataset", "DatasetDict"] = func(self, *args, **kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3035, in map
    for rank, done, content in Dataset._map_single(**dataset_kwargs):
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3438, in _map_single
    batch = apply_function_on_filtered_inputs(
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 3300, in apply_function_on_filtered_inputs
    processed_inputs = function(*fn_args, *additional_args, **fn_kwargs)
  File "/home/konstantin.smirnov/miniconda3/envs/project_env/lib/python3.9/site-packages/datasets/arrow_dataset.py", line 6281, in get_indices_from_mask_function
    mask.append(function(example, *additional_args, **fn_kwargs))
  File "/home/konstantin.smirnov/associative-recurrent-memory-transformer/lstm_experimental/lstm_binary_copy.py", line 45, in filter_length
    return len(input["input_ids"]) == self.length
KeyError: 'input_ids'
